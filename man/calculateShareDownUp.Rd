% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculateShareDownUp.R
\name{calculateShareDownUp}
\alias{calculateShareDownUp}
\title{Function to compute shares (to express a derived commodities in its primary (or at least a higher) level.
This function has been written to be used in the DerivedCommodies_submodule which works level by level.
That's why this kind of shares are used to transform the derived into its direct parent.
that it is allocated in different productive processes.}
\usage{
calculateShareDownUp(
  data,
  tree,
  printNegativeAvailability = FALSE,
  params,
  printDirectory = NULL,
  useAllSUAcomponents = FALSE
)
}
\arguments{
\item{data}{input data.table: SUA table}

\item{tree}{Commodity tree, data.table}

\item{printNegativeAvailability}{It is TRUE if you want to produce csv file containing nagative availabilities}

\item{params}{computation parameters}

\item{printDirectory}{where intermidiate output should be saved in case printNegativeAvailability is TRUE}

\item{useAllSUAcomponents}{Corrently the availability is computing just a subset of components, this
parameter allows to use all the components}
}
\description{
Function to compute shares (to express a derived commodities in its primary (or at least a higher) level.
This function has been written to be used in the DerivedCommodies_submodule which works level by level.
That's why this kind of shares are used to transform the derived into its direct parent.
that it is allocated in different productive processes.
}
